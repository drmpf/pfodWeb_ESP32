// Dwg_HelloWorldCounter.cpp  file ==============
// generated by pfodWeb Designer Arduino Export V1.0.0
/*   
 * (c)2025 Forward Computing and Control Pty. Ltd.
 * NSW Australia, www.forward.com.au
 * This code is not warranted to be fit for any purpose. You may only use it at your own risk.
 * This generated code may be freely used for both private and commercial use
 * provided this copyright is maintained.
 */

#include "Dwg_HelloWorldCounter.h"
Dwg_HelloWorldCounter dwg_HelloWorldCounter;
pfodDrawing& mainDwg = dwg_HelloWorldCounter;


static unsigned long dwgRefresh = 5000;

// return true if handled else false
// either handle cmd here or in main sketch
bool Dwg_HelloWorldCounter::processDwgCmds() {
// byte dwgCmd = parserPtr->parseDwgCmd(); // pfodParse calls this automagically before calling this method
  if (!(*(parserPtr->getDwgCmd()))) {  // ==> getDwgCmd returned pointer to empty string
    return false; // not dwg cmd, not handled
  }

  // Serial.print("dwgCmd did not match:");Serial.println(cmd_c1);
  return false; // not handled
}

bool Dwg_HelloWorldCounter::sendDwg() {
  if (!parserPtr->cmdEquals(*this)) {
    return false; // not this dwg's loadCmd
  }  // else
  if (parserPtr->isRefresh()) { // refresh just send update
    sendUpdate();
  } else {
    sendFullDrawing();
  }
  return true;
}

extern size_t loopCounter;
// all the indexed items are included here, edit as needed for updates
void Dwg_HelloWorldCounter::sendIndexedItems() {
    dwgsPtr->label().idx(idx_1).color(dwgsPtr->WHITE).text("Count: ").offset(25,31).center().units(" loops").decimals(0).value(loopCounter).send();
}
        
void Dwg_HelloWorldCounter::sendFullDrawing() {
    // Start the drawing
    dwgsPtr->start(50, 50, dwgsPtr->BLUE);
    parserPtr->sendRefreshAndVersion(dwgRefresh); // sets version and refresh time for dwg pfodWeb processes this
    sendIndexedItems(); // send indexed items first so they are available for touchZone accesses        
    dwgsPtr->label().color(dwgsPtr->RED).text("Hello World").fontSize(8).bold().offset(25,25).center().decimals(2).send();
    dwgsPtr->end();
}
        
// only indexed items can be sent as an update
// all the indexed items are included here, edit as needed
void Dwg_HelloWorldCounter::sendUpdate() {
    dwgsPtr->startUpdate();
    sendIndexedItems(); // send indexed items first so they are available for touchZone accesses        
    dwgsPtr->end();
}
// ============== end of Dwg_HelloWorldCounter.cpp  file 
